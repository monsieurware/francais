<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Delayed Copy – Chunk Recall</title>
  <style>
    :root{ --bg:#0f172a; --panel:#111827; --muted:#94a3b8; --text:#e5e7eb; --accent:#22c55e; --accent-2:#f59e0b; --danger:#ef4444; }
    *{box-sizing:border-box}
    body{margin:0;background:linear-gradient(180deg,#0b1226,#0f172a 35%,#0b1226);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Ubuntu,"Helvetica Neue",Arial,sans-serif}
    .container{max-width:980px;margin:24px auto;padding:16px}
    .card{background:rgba(17,24,39,.75);backdrop-filter:blur(6px);border:1px solid rgba(255,255,255,.08);padding:20px;border-radius:16px;box-shadow:0 10px 30px rgba(0,0,0,.35)}
    h1{font-size:clamp(22px,3.6vw,34px);margin:0 0 8px;letter-spacing:.4px}
    .sub{color:var(--muted);margin-bottom:18px}
    .row{display:flex;gap:14px;flex-wrap:wrap;align-items:center}
    .grow{flex:1}
    .mode{display:flex;gap:8px;flex-wrap:wrap}
    .mode button{border:1px solid rgba(255,255,255,.12);background:#0b1220;color:var(--text);padding:10px 12px;border-radius:10px;cursor:pointer}
    .mode button.active{border-color:var(--accent);outline:2px solid rgba(34,197,94,.25)}
    .controls{display:flex;gap:10px;flex-wrap:wrap}
    .btn{background:var(--accent);border:0;color:#06120a;padding:10px 14px;border-radius:10px;cursor:pointer;font-weight:600}
    .btn.secondary{background:#1f2937;color:var(--text);border:1px solid rgba(255,255,255,.12)}
    .btn.warn{background:var(--accent-2);color:#231c0a}
    .panel{margin-top:18px;padding:18px;border-radius:14px;background:#0b1220;border:1px dashed rgba(255,255,255,.12)}
    .phrase{font-size:clamp(20px,3.2vw,28px);line-height:1.35;min-height:68px;display:flex;align-items:center;justify-content:center;text-align:center;white-space:pre-wrap}
    .hidden{visibility:hidden}
    .countdown{font-variant-numeric:tabular-nums;letter-spacing:1px;color:var(--muted)}
    .gap{display:inline-block;border-bottom:3px solid rgba(255,255,255,.35);padding:0 0.5ch;white-space:nowrap}
    .chunk{color:#93c5fd}
    .choices{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:10px;margin-top:14px}
    .choices button{padding:10px;border-radius:10px;border:1px solid rgba(255,255,255,.12);background:#0f172a;color:var(--text);cursor:pointer}
    .choices button.correct{border-color:var(--accent)}
    .choices button.wrong{border-color:var(--danger)}
    .inputRow{display:flex;gap:8px;align-items:center;margin-top:12px}
    input[type="text"]{flex:1;background:#0f172a;border:1px solid rgba(255,255,255,.14);border-radius:10px;color:var(--text);padding:10px}
    .scramble{letter-spacing:.15ch;border:1px solid rgba(255,255,255,.12);padding:8px 10px;border-radius:8px;display:inline-block;color:#bcd7ff}
    .status{margin-top:12px;min-height:28px}
    .ok{color:var(--accent)} .bad{color:var(--danger)}
    .score{font-weight:700}
    .footer{margin-top:18px;color:var(--muted);font-size:14px}
    .pill{display:inline-block;background:rgba(255,255,255,.08);padding:4px 8px;border-radius:999px;margin-right:6px}
    /* Floating accent keyboard */
    .ime{position:fixed;z-index:50;display:none;gap:6px;flex-wrap:wrap;max-width:min(560px,94vw);background:rgba(11,18,32,0.3);border:1px solid rgba(255,255,255,.14);border-radius:12px;padding:8px;box-shadow:0 10px 28px rgba(0,0,0,.45)}
    .ime button{border:1px solid rgba(255,255,255,.14);background:#111827;color:#e5e7eb;border-radius:8px;padding:6px 8px;cursor:pointer;font-size:14px}
    .ime .title{flex-basis:100%;font-size:12px;color:#94a3b8;margin-bottom:4px;cursor:move}
  </style>
</head>
<body>
  <div class="container">
    <div class="card">
      <h1>Delayed Copy — Chunk Recall</h1>
      <div class="sub">8s show → 3s hide → fill the missing chunk. Modes: <span class="pill">Easy = choices</span><span class="pill">Intermediate = scramble</span><span class="pill">Hard = type chunk</span><span class="pill">Listening = audio + type</span></div>

      <div class="row">
        <div class="mode" role="radiogroup" aria-label="mode select">
          <button class="active" data-mode="easy" aria-pressed="true">Easy</button>
          <button data-mode="intermediate" aria-pressed="false">Intermediate</button>
          <button data-mode="hard" aria-pressed="false">Hard</button>
          <button data-mode="listening" aria-pressed="false">Listening</button>
        </div>
        <div class="grow"></div>
        <div class="controls">
          <button id="btnStart" class="btn">Start</button>
          <button id="btnNext" class="btn secondary" disabled>Next</button>
          <button id="btnExport" class="btn secondary">Export TSV</button>
          <button id="btnLog" class="btn secondary">Show Log</button>
          <button id="btnReset" class="btn warn">Reset</button>
        </div>
      </div>

      <div class="row" style="margin-top:10px">
        <div class="countdown" id="timer">Ready</div>
        <div class="grow"></div>
        <div class="score">Score: <span id="score">0</span> / <span id="total">0</span></div>
      </div>

      <div class="panel">
        <div id="phrase" class="phrase">Press <strong>Start</strong> to begin.</div>
        <div id="workArea"></div>
        <div id="status" class="status"></div>
      </div>

      <div id="logPanel" class="panel" style="display:none;max-height:220px;overflow:auto">
        <div class="row"><div class="grow"><strong>Reviewed terms</strong></div><div class="countdown"><em>French → English</em></div></div>
        <div id="logList" style="margin-top:10px"></div>
      </div>

      <div class="footer">Intermediate shows a <span class="scramble">scramble</span>. Hard/Listening let you request up to 3-letter hints.</div>
    </div>
  </div>

  <!-- Floating accent keyboard -->
  <div id="ime" class="ime" role="toolbar" aria-label="French accents">
    <div class="title">Accents <button id="imeClose" type="button" style="float:right;background:transparent;border:0;color:#94a3b8;cursor:pointer">✕</button></div>
  </div>

<script>
// === Expanded Intermediate-Mid Term Bank (keep your current list; add more later) ===
const SENTENCES = [
  "je pense que c’est important de...",
  "ce que j’aime le plus, c’est...",
  "je me rends compte que...",
  "ça dépend de la situation",
  "je suis d’accord avec toi",
  "je ne suis pas sûr(e) que ce soit une bonne idée",
  "je crois qu’il faut faire attention",
  "en général, je trouve que...",
  "ça me fait plaisir de...",
  "si j’avais le choix, je préférerais...",
  "ce n’est pas aussi simple que ça",
  "je fais de mon mieux pour...",
  "ça m’aide à me sentir bien",
  "depuis que j’ai commencé...",
  "j’ai du mal à comprendre",
  "grâce à ça, j’ai appris que...",
  "je ne m’attendais pas à...",
  "ça me met en colère quand...",
  "j’aimerais en savoir plus sur...",
  "il faut reconnaître que...",
  "on devrait encourager les gens à...",
  "je trouve ça dommage que...",
  "je me sens plus à l’aise quand...",
  "si c’était possible, je voudrais...",
  "c’est une expérience dont je me souviendrai toujours",
  "je crois que la technologie peut aider",
  "j’essaie de manger équilibré",
  "je préfère passer du temps avec ma famille",
  "je pense souvent à mon futur",
  "je trouve que les réseaux sociaux sont utiles",
  "il est essentiel de protéger la planète",
  "j’aime apprendre de nouvelles langues",
  "je pense que les voyages ouvrent l’esprit",
  "je veux améliorer mon français",
  "je trouve que l’école devrait offrir plus de choix",
  "je crois que l’amitié est très importante",
  "je veux faire une différence dans le monde",
  "je pense qu’il faut écouter les autres",
  "je me demande comment changer les choses",
  "je suis reconnaissant pour ce que j’ai",
  "je crois que tout le monde mérite du respect",
  "je veux travailler à l’étranger",
  "j’ai appris à être plus patient",
  "je crois que le sport est bon pour la santé",
  "je pense que lire aide à réfléchir",
  "j’aime passer du temps dehors",
  "je veux comprendre d’autres cultures",
  "je pense qu’il faut du courage pour réussir",
  "je me sens libre quand je voyage",
  "je crois que l’art nous fait réfléchir",
  "je pense que la musique unit les gens",
  "je suis fier de mes progrès",
  "je veux contribuer à ma communauté",
  "je crois que les erreurs font partie de l’apprentissage",
  "je trouve que la vie est pleine de surprises",
  "je pense qu’il est normal d’avoir peur parfois",
  "je veux continuer à apprendre toute ma vie",
  "je crois que les animaux méritent de la protection",
  "je veux aider les personnes dans le besoin",
  "je pense que l’éducation change le monde",
  "je veux découvrir de nouvelles passions",
  "je crois qu’il faut prendre soin de soi",
  "je me sens motivé quand j’ai un but clair",
  "je trouve que la nature est inspirante",
  "je veux apprendre à cuisiner mieux",
  "je crois qu’il faut rire chaque jour",
  "je pense que le respect est essentiel",
  "je veux voyager en Afrique un jour",
  "je crois qu’il faut apprendre de ses erreurs",
  "je me sens calme près de la mer",
  "je pense que l’amitié rend la vie plus belle",
  "je veux pratiquer un instrument de musique",
  "je crois qu’il faut dire la vérité",
  "je veux vivre dans un autre pays",
  "je pense que chaque culture est unique",
  "je veux adopter un animal",
  "je crois que la famille est un pilier",
  "je veux apprendre à mieux gérer mon temps",
  "je pense que la lecture développe l’esprit critique",
  "je veux aider à sauver l’environnement",
  "je crois que la créativité est importante",
  "je veux avoir un impact positif",
  "je pense que le bénévolat est utile",
  "je veux être plus organisé dans ma vie",
  "je crois que la gentillesse change le monde",
  "je veux apprendre à danser",
  "je pense qu’il faut rester curieux",
  "je veux comprendre les différences culturelles",
  "je crois que les souvenirs sont précieux",
  "je veux mieux communiquer avec les autres",
  "je pense qu’il faut garder espoir",
  "je veux avoir confiance en moi",
  "je crois que l’amour est universel",
  "je veux visiter le Canada",
  "je pense qu’il faut être reconnaissant chaque jour",
  "je veux apprendre à coder",
  "je crois que les rêves deviennent réalité avec du travail",
  "je veux vivre près de la nature",
  "je pense que la science est fascinante",
  "je veux participer à un projet solidaire",
  "je crois que la diversité est une richesse",
  "je veux apprendre à parler plus lentement",
  "je pense qu’il faut écouter avant de juger",
  "je veux améliorer ma prononciation en français",
  "je crois qu’il faut protéger la biodiversité",
  "je veux me sentir utile",
  "je pense que les langues rapprochent les peuples",
  "je veux découvrir l’histoire du monde",
  "je crois que la santé mentale est importante",
  "je veux faire du bénévolat dans un refuge",
  "je pense qu’il faut prendre du temps pour soi",
  "je veux vivre dans une grande ville un jour",
  "je crois que le respect des différences est vital",
  "je veux visiter la Suisse",
  "je pense que la curiosité est une qualité",
  "je veux apprendre à méditer",
  "je crois que le travail d’équipe est essentiel",
  "je veux être plus patient avec les autres",
  "je pense qu’il faut protéger les océans",
  "je veux comprendre la politique française",
  "je crois que les jeunes peuvent changer le monde",
  "je veux étudier à l’étranger",
  "je pense qu’il faut rire souvent",
  "je veux améliorer mes compétences en écriture",
  "je crois que la technologie doit servir l’humain",
  "je veux découvrir la gastronomie française",
  "je pense que la solidarité est nécessaire",
  "je veux mieux gérer le stress",
  "je crois que le sport rassemble les gens",
  "je veux créer quelque chose d’utile",
  "je pense que la patience est une force",
  "je veux apprendre à être plus indépendant",
  "je crois que la vie est faite d’opportunités",
  "je veux prendre plus de temps pour ma famille",
  "je pense qu’il faut garder une attitude positive",
  "je veux aider mes amis quand ils en ont besoin",
  "je crois que le partage rend heureux",
  "je veux apprendre à parler en public",
  "je pense que la confiance se construit avec le temps",
  "je veux comprendre les émotions humaines",
  "je crois que les voyages forment la jeunesse",
  "je veux apprendre à mieux écouter les autres"
];

// === English mappings for export/log (keep empty if unknown) ===
const EN = {
  "je pense que c’est important de...": "I think it’s important to...",
  "ce que j’aime le plus, c’est...": "what I like the most is...",
  "je me rends compte que...": "I realize that...",
  "ça dépend de la situation": "it depends on the situation",
  "je suis d’accord avec toi": "I agree with you",
  "je ne suis pas sûr(e) que ce soit une bonne idée": "I’m not sure it’s a good idea",
  "je crois qu’il faut faire attention": "I believe we have to be careful",
  "en général, je trouve que...": "in general, I find that...",
  "ça me fait plaisir de...": "it makes me happy to...",
  "si j’avais le choix, je préférerais...": "if I had the choice, I would prefer...",
  "ce n’est pas aussi simple que ça": "it’s not as simple as that",
  "je fais de mon mieux pour...": "I do my best to...",
  "ça m’aide à me sentir bien": "it helps me feel good",
  "depuis que j’ai commencé...": "since I started...",
  "j’ai du mal à comprendre": "I have trouble understanding",
  "grâce à ça, j’ai appris que...": "thanks to that, I learned that...",
  "je ne m’attendais pas à...": "I didn’t expect to...",
  "ça me met en colère quand...": "it makes me angry when...",
  "j’aimerais en savoir plus sur...": "I’d like to know more about...",
  "il faut reconnaître que...": "it must be acknowledged that...",
  "on devrait encourager les gens à...": "we should encourage people to...",
  "je trouve ça dommage que...": "I think it’s a shame that...",
  "je me sens plus à l’aise quand...": "I feel more comfortable when...",
  "si c’était possible, je voudrais...": "if it were possible, I would like to...",
  "c’est une expérience dont je me souviendrai toujours": "it’s an experience I’ll always remember",
  "je crois que la technologie peut aider": "I believe technology can help",
  "j’essaie de manger équilibré": "I try to eat a balanced diet",
  "je préfère passer du temps avec ma famille": "I prefer to spend time with my family",
  "je pense souvent à mon futur": "I often think about my future",
  "je trouve que les réseaux sociaux sont utiles": "I find that social media are useful",
  "il est essentiel de protéger la planète": "it’s essential to protect the planet",
  "j’aime apprendre de nouvelles langues": "I like learning new languages",
  "je pense que les voyages ouvrent l’esprit": "I think travel opens the mind",
  "je veux améliorer mon français": "I want to improve my French",
  "je trouve que l’école devrait offrir plus de choix": "I think school should offer more choices",
  "je crois que l’amitié est très importante": "I believe friendship is very important",
  "je veux faire une différence dans le monde": "I want to make a difference in the world",
  "je pense qu’il faut écouter les autres": "I think we have to listen to others",
  "je me demande comment changer les choses": "I wonder how to change things",
  "je suis reconnaissant pour ce que j’ai": "I’m grateful for what I have",
  "je crois que tout le monde mérite du respect": "I believe everyone deserves respect",
  "je veux travailler à l’étranger": "I want to work abroad",
  "j’ai appris à être plus patient": "I’ve learned to be more patient",
  "je crois que le sport est bon pour la santé": "I believe sports are good for your health",
  "je pense que lire aide à réfléchir": "I think reading helps you think",
  "j’aime passer du temps dehors": "I like spending time outside",
  "je veux comprendre d’autres cultures": "I want to understand other cultures",
  "je pense qu’il faut du courage pour réussir": "I think it takes courage to succeed",
  "je me sens libre quand je voyage": "I feel free when I travel",
  "je crois que l’art nous fait réfléchir": "I believe art makes us think",
  "je pense que la musique unit les gens": "I think music brings people together",
  "je suis fier de mes progrès": "I am proud of my progress",
  "je veux contribuer à ma communauté": "I want to contribute to my community",
  "je crois que les erreurs font partie de l’apprentissage": "I believe mistakes are part of learning",
  "je trouve que la vie est pleine de surprises": "I find that life is full of surprises",
  "je pense qu’il est normal d’avoir peur parfois": "I think it’s normal to be afraid sometimes",
  "je veux continuer à apprendre toute ma vie": "I want to keep learning all my life",
  "je crois que les animaux méritent de la protection": "I believe animals deserve protection",
  "je veux aider les personnes dans le besoin": "I want to help people in need",
  "je pense que l’éducation change le monde": "I think education changes the world",
  "je veux découvrir de nouvelles passions": "I want to discover new passions",
  "je crois qu’il faut prendre soin de soi": "I believe you have to take care of yourself",
  "je me sens motivé quand j’ai un but clair": "I feel motivated when I have a clear goal",
  "je trouve que la nature est inspirante": "I find nature inspiring",
  "je veux apprendre à cuisiner mieux": "I want to learn to cook better",
  "je crois qu’il faut rire chaque jour": "I believe you should laugh every day",
  "je pense que le respect est essentiel": "I think respect is essential",
  "je veux voyager en Afrique un jour": "I want to travel to Africa one day",
  "je crois qu’il faut apprendre de ses erreurs": "I believe you have to learn from your mistakes",
  "je me sens calme près de la mer": "I feel calm near the sea",
  "je pense que l’amitié rend la vie plus belle": "I think friendship makes life more beautiful",
  "je veux pratiquer un instrument de musique": "I want to practice a musical instrument",
  "je crois qu’il faut dire la vérité": "I believe you should tell the truth",
  "je veux vivre dans un autre pays": "I want to live in another country",
  "je pense que chaque culture est unique": "I think every culture is unique",
  "je veux adopter un animal": "I want to adopt a pet",
  "je crois que la famille est un pilier": "I believe family is a pillar",
  "je veux apprendre à mieux gérer mon temps": "I want to learn to manage my time better",
  "je pense que la lecture développe l’esprit critique": "I think reading develops critical thinking",
  "je veux aider à sauver l’environnement": "I want to help save the environment",
  "je crois que la créativité est importante": "I believe creativity is important",
  "je veux avoir un impact positif": "I want to have a positive impact",
  "je pense que le bénévolat est utile": "I think volunteering is useful",
  "je veux être plus organisé dans ma vie": "I want to be more organized in my life",
  "je crois que la gentillesse change le monde": "I believe kindness changes the world",
  "je veux apprendre à danser": "I want to learn to dance",
  "je pense qu’il faut rester curieux": "I think you have to stay curious",
  "je veux comprendre les différences culturelles": "I want to understand cultural differences",
  "je crois que les souvenirs sont précieux": "I believe memories are precious",
  "je veux mieux communiquer avec les autres": "I want to communicate better with others",
  "je pense qu’il faut garder espoir": "I think we have to keep hope",
  "je veux avoir confiance en moi": "I want to be confident in myself",
  "je crois que l’amour est universel": "I believe love is universal",
  "je veux visiter le Canada": "I want to visit Canada",
  "je pense qu’il faut être reconnaissant chaque jour": "I think you should be grateful every day",
  "je veux apprendre à coder": "I want to learn to code",
  "je crois que les rêves deviennent réalité avec du travail": "I believe dreams come true with hard work",
  "je veux vivre près de la nature": "I want to live close to nature",
  "je pense que la science est fascinante": "I think science is fascinating",
  "je veux participer à un projet solidaire": "I want to take part in a community project",
  "je crois que la diversité est une richesse": "I believe diversity is a strength",
  "je veux apprendre à parler plus lentement": "I want to learn to speak more slowly",
  "je pense qu’il faut écouter avant de juger": "I think you should listen before judging",
  "je veux améliorer ma prononciation en français": "I want to improve my pronunciation in French",
  "je crois qu’il faut protéger la biodiversité": "I believe we must protect biodiversity",
  "je veux me sentir utile": "I want to feel useful",
  "je pense que les langues rapprochent les peuples": "I think languages bring people together",
  "je veux découvrir l’histoire du monde": "I want to discover the world’s history",
  "je crois que la santé mentale est importante": "I believe mental health is important",
  "je veux faire du bénévolat dans un refuge": "I want to volunteer at a shelter",
  "je pense qu’il faut prendre du temps pour soi": "I think you need to take time for yourself",
  "je veux vivre dans une grande ville un jour": "I want to live in a big city one day",
  "je crois que le respect des différences est vital": "I believe respecting differences is vital",
  "je veux visiter la Suisse": "I want to visit Switzerland",
  "je pense que la curiosité est une qualité": "I think curiosity is a strength",
  "je veux apprendre à méditer": "I want to learn to meditate",
  "je crois que le travail d’équipe est essentiel": "I believe teamwork is essential",
  "je veux être plus patient avec les autres": "I want to be more patient with others",
  "je pense qu’il faut protéger les océans": "I think we must protect the oceans",
  "je veux comprendre la politique française": "I want to understand French politics",
  "je crois que les jeunes peuvent changer le monde": "I believe young people can change the world",
  "je veux étudier à l’étranger": "I want to study abroad",
  "je pense qu’il faut rire souvent": "I think you should laugh often",
  "je veux améliorer mes compétences en écriture": "I want to improve my writing skills",
  "je crois que la technologie doit servir l’humain": "I believe technology must serve people",
  "je veux découvrir la gastronomie française": "I want to discover French cuisine",
  "je pense que la solidarité est nécessaire": "I think solidarity is necessary",
  "je veux mieux gérer le stress": "I want to manage stress better",
  "je crois que le sport rassemble les gens": "I believe sport brings people together",
  "je veux créer quelque chose d’utile": "I want to create something useful",
  "je pense que la patience est une force": "I think patience is a strength",
  "je veux apprendre à être plus indépendant": "I want to learn to be more independent",
  "je crois que la vie est faite d’opportunités": "I believe life is full of opportunities",
  "je veux prendre plus de temps pour ma famille": "I want to take more time for my family",
  "je pense qu’il faut garder une attitude positive": "I think you should keep a positive attitude",
  "je veux aider mes amis quand ils en ont besoin": "I want to help my friends when they need it",
  "je crois que le partage rend heureux": "I believe sharing makes you happy",
  "je veux apprendre à parler en public": "I want to learn to speak in public",
  "je pense que la confiance se construit avec le temps": "I think trust is built over time",
  "je veux comprendre les émotions humaines": "I want to understand human emotions",
  "je crois que les voyages forment la jeunesse": "I believe travel shapes young people",
  "je veux apprendre à mieux écouter les autres": "I want to learn to listen to others better"
};

// === State ===
let mode='easy', index=-1, showTimeout=null, score=0, total=0;
let order=[...Array(SENTENCES.length).keys()].sort(()=>Math.random()-0.5);
let currentFull='', currentChunk='';
const seen = new Map(); // fr -> en (optional)

// === Elements ===
const phraseEl=document.getElementById('phrase');
const timerEl=document.getElementById('timer');
const workArea=document.getElementById('workArea');
const statusEl=document.getElementById('status');
const btnStart=document.getElementById('btnStart');
const btnNext=document.getElementById('btnNext');
const btnExport=document.getElementById('btnExport');
const btnReset=document.getElementById('btnReset');
const btnLog=document.getElementById('btnLog');
const scoreEl=document.getElementById('score');
const totalEl=document.getElementById('total');
const logPanel=document.getElementById('logPanel');
const logList=document.getElementById('logList');
const ime=document.getElementById('ime');
const imeClose=document.getElementById('imeClose');
const imeTitle=ime.querySelector('.title');

// === Helpers ===
function shuffle(a){const arr=[...a];for(let i=arr.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[arr[i],arr[j]]=[arr[j],arr[i]];}return arr;}
function normalize(s){
  return s.toLowerCase()
    .replace(/[’‘']/g, "'")
    .normalize('NFD').replace(/[\u0300-\u036f]/g,'')
    .replace(/[…]+/g,'...')
    .replace(/\s+/g,' ')
    .replace(/\s*\.{3}\s*$/,'...')
    .trim();
}
function equalsLoose(a,b){return normalize(a)===normalize(b);} 

// Pick a random 1–3 word chunk from a sentence
function pickRandomChunk(full){
  const tokens=full.split(/\s+/);
  if(tokens.length===0) return full;
  const len=Math.min(3,Math.max(1,Math.floor(Math.random()*3)+1));
  const startMax=Math.max(0,tokens.length-len);
  const start=Math.floor(Math.random()*(startMax+1));
  let slice=tokens.slice(start,start+len).join(' ');
  slice=slice.replace(/^[\s\.,;:!?«»“”"()]+/, '').replace(/[\s\.,;:!?«»“”"()]+$/, '');
  if(!slice) return pickRandomChunk(full);return slice;
}
function highlightChunk(full,chunk){const idx=full.toLowerCase().indexOf(chunk.toLowerCase());if(idx===-1) return full;const before=full.slice(0,idx);const mid=full.slice(idx,idx+chunk.length);const after=full.slice(idx+chunk.length);return `${before}<span class="chunk">${mid}</span>${after}`;}
function mask(full,chunk){const idx=full.toLowerCase().indexOf(chunk.toLowerCase());if(idx===-1){return full.replace('...', '<span class="gap" aria-label="missing">&nbsp;</span>');}const before=full.slice(0,idx);const after=full.slice(idx+chunk.length);return `${before}<span class="gap" aria-label="missing">&nbsp;</span>${after}`;}
function scrambleLetters(s){const letters=s.split("");const idxs=letters.map((c,i)=>(/[A-Za-zÀ-ÿ0-9]/.test(c)?i:null)).filter(i=>i!==null);const pool=idxs.map(i=>letters[i]);const shuffled=shuffle(pool);idxs.forEach((i,k)=>letters[i]=shuffled[k]);return letters.join("");}
function countdown(seconds,label,onDone){let s=seconds;timerEl.textContent=`${label}: ${s}s`;const tick=()=>{s--;if(s<=0){onDone();return;}timerEl.textContent=`${label}: ${s}s`;showTimeout=setTimeout(tick,1000);};showTimeout=setTimeout(tick,1000);} 
function resetTimers(){if(showTimeout){clearTimeout(showTimeout);showTimeout=null;}}
function setMode(newMode){mode=newMode;document.querySelectorAll('.mode button').forEach(btn=>{const active=btn.dataset.mode===newMode;btn.classList.toggle('active',active);btn.setAttribute('aria-pressed',active?'true':'false');});}
function getDistractors(correct,k){const out=new Set();let guard=0;while(out.size<k&&guard<200){guard++;const i=Math.floor(Math.random()*SENTENCES.length);const s=SENTENCES[i];const c=pickRandomChunk(s);if(!equalsLoose(c,correct)) out.add(c);}return [...out];}

// === TTS (Listening mode) ===
let ttsVoice=null;function getFrenchVoice(){if(ttsVoice) return ttsVoice;if(!('speechSynthesis' in window)) return null;const voices=window.speechSynthesis.getVoices();ttsVoice=voices.find(v=>/fr/i.test(v.lang||v.name))||null;return ttsVoice;} function speak(text){if(!('speechSynthesis' in window)) return;stopSpeaking();const u=new SpeechSynthesisUtterance((text||'').replace(/\.\.\./g,''));const v=getFrenchVoice();if(v) u.voice=v;u.lang=(v&&v.lang)||'fr-FR';u.rate=0.95;u.pitch=1.0;window.speechSynthesis.speak(u);} function stopSpeaking(){if('speechSynthesis' in window) window.speechSynthesis.cancel();}

function nextItem(){stopSpeaking();resetTimers();statusEl.textContent='';workArea.innerHTML='';btnNext.disabled=true;index++;if(index>=order.length){phraseEl.innerHTML=`All done! Final score: <strong>${score}</strong> / ${total}`;timerEl.textContent='Finished';return;}total++;totalEl.textContent=total;currentFull=SENTENCES[order[index]];currentChunk=pickRandomChunk(currentFull);if(!seen.has(currentFull)) seen.set(currentFull, EN[currentFull]||"");if(logPanel && logPanel.style.display!=='none'){renderLog();}phraseEl.innerHTML=highlightChunk(currentFull,currentChunk);countdown(8,'Memorize',()=>{phraseEl.classList.add('hidden');countdown(3,'Hide',()=>{setLogLock(true);phraseEl.classList.remove('hidden');phraseEl.innerHTML=mask(currentFull,currentChunk);renderModeUI();timerEl.textContent='Answer now';});});}

function renderModeUI(){workArea.innerHTML='';if(mode==='easy') renderEasy(); else if(mode==='intermediate') renderIntermediate(); else if(mode==='listening') renderListening(); else renderHard();}
function renderEasy(){const options=[currentChunk,...getDistractors(currentChunk,3)];const buttons=shuffle(options);const wrap=document.createElement('div');wrap.className='choices';buttons.forEach(txt=>{const b=document.createElement('button');b.textContent=txt;b.addEventListener('click',()=>{if(equalsLoose(txt,currentChunk)){b.classList.add('correct');statusEl.textContent='Correct!';statusEl.className='status ok';score++;scoreEl.textContent=score;}else{b.classList.add('wrong');statusEl.textContent=`Not quite. Answer: “${currentChunk}”.`;statusEl.className='status bad';} setLogLock(false); btnNext.disabled=false;});wrap.appendChild(b);} );workArea.appendChild(wrap);} 
function renderIntermediate(){const hint=document.createElement('div');hint.className='scramble';hint.textContent=scrambleLetters(currentChunk);workArea.appendChild(hint);const row=document.createElement('div');row.className='inputRow';const inp=document.createElement('input');inp.type='text';inp.placeholder='Type the missing chunk';attachIME(inp);const submit=document.createElement('button');submit.className='btn secondary';submit.textContent='Check';submit.addEventListener('click',()=>{const val=(inp.value||'').trim();if(equalsLoose(val,currentChunk)){statusEl.textContent='Correct!';statusEl.className='status ok';score++;scoreEl.textContent=score;}else{statusEl.textContent=`Not quite. Answer: “${currentChunk}”.`;statusEl.className='status bad';}setLogLock(false); btnNext.disabled=false;});row.appendChild(inp);row.appendChild(submit);workArea.appendChild(row);inp.focus();}
function renderHard(){const row=document.createElement('div');row.className='inputRow';const inp=document.createElement('input');inp.type='text';inp.placeholder='Type the missing chunk';attachIME(inp);const submit=document.createElement('button');submit.className='btn secondary';submit.textContent='Check';let hintCount=0,maxHint=3;const hintBtn=document.createElement('button');hintBtn.className='btn secondary';hintBtn.textContent='Hint';const hintSpan=document.createElement('span');hintSpan.className='countdown';hintSpan.style.marginLeft='8px';hintBtn.addEventListener('click',()=>{if(hintCount>=maxHint) return;hintCount++;hintSpan.textContent='Hint: '+prefixLetters(currentChunk,hintCount);});submit.addEventListener('click',()=>{const val=(inp.value||'').trim();if(equalsLoose(val,currentChunk)){statusEl.textContent='Perfect!';statusEl.className='status ok';score++;scoreEl.textContent=score;}else{statusEl.innerHTML='Close. Target chunk was:<br>“'+currentChunk+'”';statusEl.className='status bad';}setLogLock(false); btnNext.disabled=false;});row.appendChild(inp);row.appendChild(submit);row.appendChild(hintBtn);row.appendChild(hintSpan);workArea.appendChild(row);inp.focus();}
function renderListening(){const row=document.createElement('div');row.className='inputRow';const play=document.createElement('button');play.className='btn secondary';play.textContent='Play';play.addEventListener('click',()=>{speak(currentFull);});const inp=document.createElement('input');inp.type='text';inp.placeholder='Type the missing chunk';attachIME(inp);const submit=document.createElement('button');submit.className='btn secondary';submit.textContent='Check';let hintCount=0,maxHint=3;const hintBtn=document.createElement('button');hintBtn.className='btn secondary';hintBtn.textContent='Hint';const hintSpan=document.createElement('span');hintSpan.className='countdown';hintSpan.style.marginLeft='8px';hintBtn.addEventListener('click',()=>{if(hintCount>=maxHint) return;hintCount++;hintSpan.textContent='Hint: '+prefixLetters(currentChunk,hintCount);});submit.addEventListener('click',()=>{const val=(inp.value||'').trim();if(equalsLoose(val,currentChunk)){statusEl.textContent='Nice listening!';statusEl.className='status ok';score++;scoreEl.textContent=score;}else{statusEl.innerHTML='Close. Target chunk was:<br>“'+currentChunk+'”';statusEl.className='status bad';}setLogLock(false); btnNext.disabled=false;});row.appendChild(play);row.appendChild(inp);row.appendChild(submit);row.appendChild(hintBtn);row.appendChild(hintSpan);workArea.appendChild(row);try{speak(currentFull);}catch(e){}inp.focus();}

// Helper: get first N letters of a chunk (skip spaces/apostrophes)
function prefixLetters(text,n){var count=0,out='';for(var i=0;i<text.length;i++){var ch=text.charAt(i);if(" \u2019'-".indexOf(ch)!==-1){out+=ch;continue;}out+=ch;count++;if(count>=n) break;}return out;}
function renderLog(){
  if(!logList) return;
  function gloss(fr){
    var s=(fr||'').toLowerCase();
    s=s.split('…').join('...');
    s=s.split('’').join("'");
    s=s.split('‘').join("'");
    s=s.trim();
    function after(prefix){ return fr.slice(prefix.length); }
    if(s.indexOf('je pense que ')===0) return 'I think that ' + after('je pense que ');
    if(s.indexOf('je crois que ')===0) return 'I believe that ' + after('je crois que ');
    if(s.indexOf('je trouve que ')===0) return 'I find that ' + after('je trouve que ');
    if(s.indexOf("j'aime ")===0 || s.indexOf("j\'aime ")===0) return 'I like ' + after("j'aime ");
    if(s.indexOf('je veux ')===0) return 'I want to ' + after('je veux ');
    if(s.indexOf('je voudrais ')===0) return 'I would like to ' + after('je voudrais ');
    if(s.indexOf('je vais ')===0) return 'I am going to ' + after('je vais ');
    if(s.indexOf('je suis ')===0) return 'I am ' + after('je suis ');
    if(s.indexOf('je me sens ')===0) return 'I feel ' + after('je me sens ');
    if(s.indexOf('il faut ')===0) return 'we/one must ' + after('il faut ');
    if(s.indexOf('on devrait ')===0) return 'we should ' + after('on devrait ');
    if(s.indexOf("c'est ")===0 || s.indexOf('c’est ')===0) return "it's " + after("c'est ");
    if(s.indexOf('en général ')===0 || s.indexOf('en general ')===0) return 'in general, ' + after('en général ');
    if(s.indexOf('grâce à ça ')===0 || s.indexOf('grace a ca ')===0) return 'thanks to that, ' + after('grâce à ça ');
    if(s.indexOf('depuis que ')===0) return 'since ' + after('depuis que ');
    if(s.indexOf("si c'était possible ")===0 || s.indexOf('si c’etait possible ')===0) return 'if it were possible, ' + after("si c'était possible ");
    if(s.indexOf("si j'avais le choix ")===0 || s.indexOf('si j\'avais le choix ')===0) return 'if I had the choice, ' + after("si j'avais le choix ");
    return '';
  }
  var entries=Array.from(seen.entries());
  var rows=entries.map(function(pair){ var fr=pair[0], en=(EN[fr] || pair[1] || ''); return '<div class="row"><div class="grow">'+fr+'</div><div>'+(en||'–')+'</div></div>'; }).join('');
  logList.innerHTML = rows || '<div class="countdown">(No items yet)</div>';
}

function setLogLock(lock){
  if(!btnLog) return; btnLog.disabled=!!lock;
  if(lock){ logPanel.style.display='none'; btnLog.textContent='Show Log'; }
}

// === Export TSV ===
function exportTSV(){if(seen.size===0){alert('Nothing to export yet. Play a round first.');return;}const rows=[...seen.entries()].map(([fr,en])=>`${fr}	${EN[fr]||en||''}`);const tsv=rows.join('\n');const blob=new Blob([tsv],{type:'text/tab-separated-values;charset=utf-8'});const url=URL.createObjectURL(blob);const a=document.createElement('a');const stamp=new Date().toISOString().slice(0,19).replace(/[:T]/g,'-');a.href=url;a.download=`delayed-copy-log-${stamp}.tsv`;document.body.appendChild(a);a.click();setTimeout(()=>{URL.revokeObjectURL(url);a.remove();},0);} 

// === Accent IME ===
const accentKeys=['à','â','ä','æ','ç','é','è','ê','ë','î','ï','ô','œ','ù','û','ü','ÿ','À','Â','Ä','Æ','Ç','É','È','Ê','Ë','Î','Ï','Ô','Œ','Ù','Û','Ü','Ÿ'];
let currentIMEInput=null, imeManual=false;
function attachIME(input){if(!ime.dataset.ready){accentKeys.forEach(ch=>{const b=document.createElement('button');b.type='button';b.textContent=ch;b.addEventListener('mousedown',e=>{e.preventDefault();insertAtCursor(currentIMEInput||input,ch);(currentIMEInput||input).focus();});ime.appendChild(b);});ime.dataset.ready='1';}
  input.addEventListener('focus',()=>{currentIMEInput=input;ime.style.display='flex';if(!imeManual) positionIME(input);});
  input.addEventListener('keyup',()=>{if(!imeManual) positionIME(input);});
  input.addEventListener('blur',()=>{setTimeout(()=>{const ae=document.activeElement;if(ae!==input && !ime.contains(ae)){ime.style.display='none';}},80);});
  window.addEventListener('scroll',()=>{if(!imeManual) positionIME(input);});
  window.addEventListener('resize',()=>{if(!imeManual) positionIME(input);});
}
function positionIME(input){if(ime.style.display==='none' || imeManual) return;const r=input.getBoundingClientRect();const pad=8;let top=window.scrollY+r.top-ime.offsetHeight-pad;let left=window.scrollX+r.left;if(top<window.scrollY+10){top=window.scrollY+r.bottom+pad;}left=Math.max(window.scrollX+10,Math.min(left,window.scrollX+window.innerWidth-ime.offsetWidth-10));ime.style.top=top+'px';ime.style.left=left+'px';}
function insertAtCursor(el,text){const start=el.selectionStart??el.value.length;const end=el.selectionEnd??el.value.length;const before=el.value.slice(0,start);const after=el.value.slice(end);el.value=before+text+after;const pos=start+text.length;el.selectionStart=el.selectionEnd=pos;el.dispatchEvent(new Event('input',{bubbles:true}));}
function enableDrag(el,handle){let dragging=false,startX=0,startY=0,origX=0,origY=0;handle.addEventListener('mousedown',(e)=>{if(e.target===imeClose) return;imeManual=true;dragging=true;startX=e.clientX;startY=e.clientY;const r=el.getBoundingClientRect();origX=r.left;origY=r.top;const onMove=(ev)=>{if(!dragging) return;let nx=origX+(ev.clientX-startX);let ny=origY+(ev.clientY-startY);const maxX=window.innerWidth-el.offsetWidth-10;const maxY=window.innerHeight-el.offsetHeight-10;nx=Math.max(10,Math.min(nx,maxX));ny=Math.max(10,Math.min(ny,maxY));el.style.left=nx+'px';el.style.top=ny+'px';};const onUp=()=>{dragging=false;document.removeEventListener('mousemove',onMove);document.removeEventListener('mouseup',onUp);};document.addEventListener('mousemove',onMove);document.addEventListener('mouseup',onUp);e.preventDefault();});}

// === Events ===
if('speechSynthesis' in window){ window.speechSynthesis.onvoiceschanged=()=>{ttsVoice=null;getFrenchVoice();}; }
document.querySelectorAll('.mode button').forEach(btn=>{btn.addEventListener('click',()=> setMode(btn.dataset.mode));});
if(btnLog){btnLog.addEventListener('click',function(){var showing=logPanel.style.display!=='none';logPanel.style.display=showing?'none':'block';btnLog.textContent=showing?'Show Log':'Hide Log';if(!showing) renderLog();});}
enableDrag(ime,imeTitle);
btnStart.addEventListener('click',()=>{score=0;total=0;scoreEl.textContent=0;totalEl.textContent=0;index=-1;order=shuffle([...Array(SENTENCES.length).keys()]);nextItem();});
btnNext.addEventListener('click',()=> nextItem());
btnExport.addEventListener('click',exportTSV);
btnReset.addEventListener('click',()=>{stopSpeaking();if(showTimeout){clearTimeout(showTimeout);showTimeout=null;}score=0;total=0;scoreEl.textContent=0;totalEl.textContent=0;index=-1;order=shuffle([...Array(SENTENCES.length).keys()]);seen.clear();timerEl.textContent='Ready';statusEl.textContent='';workArea.innerHTML='';phraseEl.innerHTML='Press <strong>Start</strong> to begin.';phraseEl.classList.remove('hidden');ime.style.display='none';currentIMEInput=null;imeManual=false;});
imeClose.addEventListener('click',()=>{ime.style.display='none';currentIMEInput=null;});
</script>
</body>
</html>
